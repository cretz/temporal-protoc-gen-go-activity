// Code generated by protoc-gen-go-activity. DO NOT EDIT.

package greetingspb

import (
	context "context"
	workflow "go.temporal.io/sdk/workflow"
)

type greetings struct{}

// Greetings is for workflows to call for executing activities.
//
// Greetings activities.
var Greetings greetings

// Get the greeting.
func (greetings) GetGreeting(ctx workflow.Context, in *GetGreetingRequest) (out *GetGreetingResponse, err error) {
	if in == nil {
		in = new(GetGreetingRequest)
	}
	err = workflow.ExecuteActivity(ctx, "GetGreeting", in).Get(ctx, &out)
	return
}

// Get the name.
func (greetings) GetName(ctx workflow.Context, in *GetNameRequest) (out *GetNameResponse, err error) {
	if in == nil {
		in = new(GetNameRequest)
	}
	err = workflow.ExecuteActivity(ctx, "GetName", in).Get(ctx, &out)
	return
}

// Say the greeting.
func (greetings) SayGreeting(ctx workflow.Context, in *SayGreetingRequest) (out *SayGreetingResponse, err error) {
	if in == nil {
		in = new(SayGreetingRequest)
	}
	err = workflow.ExecuteActivity(ctx, "SayGreeting", in).Get(ctx, &out)
	return
}

// GreetingsImpl is for activity implementations on workers. The struct that implements this can be passed to RegisterActivity.
//
// Greetings activities.
type GreetingsImpl interface {
	// Get the greeting.
	GetGreeting(context.Context, *GetGreetingRequest) (*GetGreetingResponse, error)

	// Get the name.
	GetName(context.Context, *GetNameRequest) (*GetNameResponse, error)

	// Say the greeting.
	SayGreeting(context.Context, *SayGreetingRequest) (*SayGreetingResponse, error)
}
